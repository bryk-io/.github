name: publish
permissions: read-all
env:
  # used to hold the commit message
  commit_msg: ""
on:
  push:
    tags:
      - "*"
jobs:
  # Publish project artifacts(s)
  publish:
    name: publish package
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      # Harden workflow runner
      - name: Harden workflow runner (audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      # Prepare runner environment
      - name: Set up runner environment
        run: ./.github/workflows/assets/utils.sh setup
        env:
          GITHUB_USER: ${{ github.actor }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # Go
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.0.0
        with:
          go-version: 1.25.x

      # Get commit message
      - name: Get commit message
        run: |
          echo 'commit_msg<<EOF' >> $GITHUB_ENV
          git log --format=%B -n 1 ${{ github.sha }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      # Use goreleaser to create the new release
      # https://github.com/goreleaser/goreleaser-action
      - name: Create release
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        if: ${{ startsWith(github.ref, 'refs/tags/') && !contains(env.commit_msg, '[skip release]') }}
        with:
          version: latest
          args: release --clean --skip=validate
        env:
          # https://docs.github.com/en/free-pro-team@latest/actions/reference/authentication-in-a-workflow
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          # Login of the user that initiated the workflow run
          GITHUB_USER: ${{ github.actor }}
