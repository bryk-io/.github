name: ci
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master
  workflow_dispatch: {}
#    Inputs are available under: github.event.inputs.{name}
#    inputs:
#      name:
#        description: 'Variable description'
#        required: true
#        default: 'default value here'
jobs:
  # Runs on every push and pull request on the selected branches.
  # Can also be executed manually.
  test:
    name: code quality and correctness
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # Go 1.14
      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14

      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Prepare runner environment
      - name: Set up runner environment
        run: ./.github/workflows/assets/utils.sh setup
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      # If "vendor" is in cache, restore.
      # To run conditional steps use:
      # if: steps.vendor-cache.outputs.cache-hit != 'true'
      - name: "Restore modules from cache"
        id: vendor-cache
        uses: actions/cache@v2
        env:
          cache-name: vendor
        with:
          path: ./vendor
          key: ${{ env.cache-name }}-${{ hashFiles('go.sum') }}

      # Style consistency and static analysis using 'golangci-lint'
      # https://github.com/marketplace/actions/run-golangci-lint
      - name: Static analysis
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

      # Run unit tests
      - name: Test
        run: make test

      # Ensure project compile and build successfully
      - name: Build
        run: make build
      
      # Save artifacts
      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: assets
          path: |
            coverage.html

      # Populate vendor cache to speed up future runs
      - name: "Populate vendor cache"
        run: go mod vendor
  # Runs when a tag is published if 'test' is successful.
  publish:
    name: publish package
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: test
    if: ${{ contains(github.ref, 'refs/tags/') }}
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Get previously build assets
      - uses: actions/download-artifact@v2
        with:
          name: assets

      # # Prepare assets required for the image
      # - name: Prepare assets
      #   run: |
      #     mv *_linux_amd64 binary_linux_amd64
      #     chmod +x binary_linux_amd64

      # Build and publish docker image
      - name: Build and publish image
        uses: docker/build-push-action@v1
        with:
          registry: docker.pkg.github.com
          repository: ${{ github.repository }}/image-name
          username: ${{ github.actor }}
          password: ${{ github.token }}
          push: true
          tag_with_ref: true
          add_git_labels: true
