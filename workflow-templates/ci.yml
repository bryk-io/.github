name: ci
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: {}
#    Inputs are available under: github.event.inputs.{name}
#    inputs:
#      name:
#        description: 'Variable description'
#        required: true
#        default: 'default value here'
jobs:
  test:
    name: code quality and correctness
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      # Go 1.14
      - name: Setup go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14

      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # If "vendor" is in cache, restore.
      # To run conditional steps use:
      # if: steps.vendor-cache.outputs.cache-hit != 'true'
      - name: "Restore modules from cache"
        id: vendor-cache
        uses: actions/cache@v2
        env:
          cache-name: vendor
        with:
          path: ./vendor
          key: ${{ env.cache-name }}-${{ hashFiles('go.sum') }}

      # Configure environment to access private modules
      - name: Private modules credentials
        run: ./.github/workflows/assets/utils.sh credentials
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      # Style consistency and static analysis using 'golangci-lint'
      # https://github.com/marketplace/actions/run-golangci-lint
      - name: Static Analysis
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

      # Run unit tests
      - name: Test
        run: |
          go test -race -failfast -v ./...

      # Ensure project compile and build successfully
      - name: Build
        run: |
          go build -v

      # Populate vendor cache to speed up future runs
      - name: "Populate vendor cache"
        run: go mod vendor
